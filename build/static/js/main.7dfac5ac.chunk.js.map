{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","personObject","post","id","delete","statusText","modifiedObject","put","catch","error","console","log","Person","props","style","display","marginTop","person","name","number","value","onClick","handleDelete","marginLeft","Filter","newFilter","onChange","handleFilterChange","PersonInput","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","message","errorType","className","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","showAll","setShowAll","errorMessage","setErrorMessage","setErrorType","personsToShow","filter","toLowerCase","indexOf","useEffect","PersonService","initialPersons","handleDeleteButton","event","window","confirm","target","idToDelete","find","p","String","setTimeout","err","margin","preventDefault","personExists","Math","random","forEach","e","updatedPerson","alert","concat","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dfac5ac.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (personObject) => {\n    const request = axios.post(baseUrl, personObject)\n    return request.then(response => response.data)\n}\n\n// Returns a status code\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.statusText)\n}\n\nconst modify = (modifiedObject, id) => {\n    const request = axios.put(`${baseUrl}/${id}`, modifiedObject)\n    return request.then(response => response.data).catch(error => {console.log('failed', error)})\n}\n\nexport default {getAll, create, remove, modify}","import React, { useState, useEffect } from 'react'\nimport PersonService from './services/persons'\nimport './index.css'\n\nconst Person = (props) => \n  <div style={{display: 'flex', marginTop: 10}}>\n    <div>{props.person.name}:  {props.person.number}</div>\n    <button value={props.person.id} onClick={props.handleDelete} style={{marginLeft: 10}}>delete</button>\n  </div>\n\nconst Filter = (props) => <div> filter shown with: <input value={props.newFilter}  onChange={props.handleFilterChange}/></div> \n\nconst PersonInput = (props) => \n  <form onSubmit={props.addPerson}>\n    <div>\n      name: <input \n            value={props.newName}  \n            onChange={props.handleNameChange}\n            />\n    </div>\n    <div>\n      number: <input \n            value={props.newNumber}  \n            onChange={props.handleNumberChange}\n            />\n    </div>        \n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n\nconst Notification = ({ message, errorType }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={errorType}>\n      {message}\n    </div>\n  )\n}\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [errorType, setErrorType] = useState('')\n\n  var personsToShow = showAll \n    ? persons \n    : persons.filter(person => person.name.toLowerCase().indexOf(newFilter.toLowerCase()) !== -1)\n\n  useEffect(() => {\n    PersonService.getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n    \n    // Keep in useEffect to ensure UI reloads in real time when changes are made to phonebook\n    personsToShow = showAll \n    ? persons\n    : persons.filter(person => person.name.toLowerCase().indexOf(newFilter.toLowerCase()) !== -1)   \n\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    var personExists = false;\n\n    const personObject = {\n      name: newName,\n      id: Math.random(),\n      number: newNumber\n    }\n\n    persons.forEach( e => {\n      if (e.name === newName) {\n        personExists = true\n        return\n      }\n    })\n\n    if (!personExists) {\n      setPersons(persons.concat(personObject))\n      PersonService.create(personObject)\n      setErrorType('greenError')\n      setErrorMessage('Person Added Successfully')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n\n    else if (personExists){\n      if (window.confirm('This person already exists. Do you want to replace the old number with a new one?')){\n        const id = persons.find(p => p.name === newName).id\n        const person = persons.find(p => p.id === id)\n        const modifiedObject = {...person, number: newNumber}\n\n        PersonService\n          .modify(modifiedObject, id)\n          .then(updatedPerson => {\n            setPersons(p => p.id !== id ? p : updatedPerson)\n            setErrorType('greenError')\n            setErrorMessage('Number replaced succesfully')\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          })\n        \n      } else return\n    }\n    \n    else {\n      alert(`${newName} is already added to phonebook`)\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  \n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n    setShowAll(false)\n  }\n\n  const handleDeleteButton = (event) => {\n    if (window.confirm(\"Are you sure you want to delete this person?\")) { \n      PersonService\n        .remove(event.target.value)\n        .then( () => {\n          const idToDelete = persons.find(p => String(p.id) === event.target.value).id\n          setPersons(persons.filter(p => p.id !== idToDelete))\n          setErrorType('greenError')\n          setErrorMessage('Person deleted succesfully')\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n        .catch( err => {\n          console.log(err)\n          setErrorType('redError')\n          setErrorMessage(`This person was already deleted from the server`)\n          const idToDelete = persons.find(p => String(p.id) === event.target.value).id\n          setPersons(persons.filter(p => p.id !== idToDelete))          \n        })\n    }\n  }\n\n  return (\n    <div style={{margin: 30}}>\n      <h2>Phonebook</h2>   \n      <Notification message={errorMessage} errorType={errorType}/>        \n      <Filter newFilter={newFilter}  handleFilterChange={handleFilterChange}/>\n\n      <h2>Add New Person</h2>    \n      <PersonInput \n        addPerson={addPerson} \n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      /> \n      \n      <h2>Numbers</h2>\n      <ul>\n        {personsToShow.map(person => \n          <Person \n            key={person.id}\n            person={person}\n            handleDelete={handleDeleteButton}\n          />\n        )}\n      </ul> \n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}